# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule EveESI.Model.GetUniverseTypesTypeIdOk do
  @moduledoc """
  200 ok object
  """

  @derive Jason.Encoder
  defstruct [
    :capacity,
    :description,
    :dogma_attributes,
    :dogma_effects,
    :graphic_id,
    :group_id,
    :icon_id,
    :market_group_id,
    :mass,
    :name,
    :packaged_volume,
    :portion_size,
    :published,
    :radius,
    :type_id,
    :volume
  ]

  @type t :: %__MODULE__{
    :capacity => float() | nil,
    :description => String.t,
    :dogma_attributes => [EveESI.Model.GetUniverseTypesTypeIdDogmaAttribute.t] | nil,
    :dogma_effects => [EveESI.Model.GetUniverseTypesTypeIdDogmaEffect.t] | nil,
    :graphic_id => integer() | nil,
    :group_id => integer(),
    :icon_id => integer() | nil,
    :market_group_id => integer() | nil,
    :mass => float() | nil,
    :name => String.t,
    :packaged_volume => float() | nil,
    :portion_size => integer() | nil,
    :published => boolean(),
    :radius => float() | nil,
    :type_id => integer(),
    :volume => float() | nil
  }

  alias EveESI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:dogma_attributes, :list, EveESI.Model.GetUniverseTypesTypeIdDogmaAttribute)
     |> Deserializer.deserialize(:dogma_effects, :list, EveESI.Model.GetUniverseTypesTypeIdDogmaEffect)
  end
end

