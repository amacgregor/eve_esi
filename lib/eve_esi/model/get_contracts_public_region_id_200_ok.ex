# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule EveESI.Model.GetContractsPublicRegionId200Ok do
  @moduledoc """
  200 ok object
  """

  @derive Jason.Encoder
  defstruct [
    :buyout,
    :collateral,
    :contract_id,
    :date_expired,
    :date_issued,
    :days_to_complete,
    :end_location_id,
    :for_corporation,
    :issuer_corporation_id,
    :issuer_id,
    :price,
    :reward,
    :start_location_id,
    :title,
    :type,
    :volume
  ]

  @type t :: %__MODULE__{
    :buyout => float() | nil,
    :collateral => float() | nil,
    :contract_id => integer(),
    :date_expired => DateTime.t,
    :date_issued => DateTime.t,
    :days_to_complete => integer() | nil,
    :end_location_id => integer() | nil,
    :for_corporation => boolean() | nil,
    :issuer_corporation_id => integer(),
    :issuer_id => integer(),
    :price => float() | nil,
    :reward => float() | nil,
    :start_location_id => integer() | nil,
    :title => String.t | nil,
    :type => String.t,
    :volume => float() | nil
  }

  alias EveESI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:date_expired, :datetime, nil)
     |> Deserializer.deserialize(:date_issued, :datetime, nil)
  end
end

