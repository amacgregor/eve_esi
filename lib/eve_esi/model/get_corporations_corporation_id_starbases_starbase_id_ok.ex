# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule EveESI.Model.GetCorporationsCorporationIdStarbasesStarbaseIdOk do
  @moduledoc """
  200 ok object
  """

  @derive Jason.Encoder
  defstruct [
    :allow_alliance_members,
    :allow_corporation_members,
    :anchor,
    :attack_if_at_war,
    :attack_if_other_security_status_dropping,
    :attack_security_status_threshold,
    :attack_standing_threshold,
    :fuel_bay_take,
    :fuel_bay_view,
    :fuels,
    :offline,
    :online,
    :unanchor,
    :use_alliance_standings
  ]

  @type t :: %__MODULE__{
    :allow_alliance_members => boolean(),
    :allow_corporation_members => boolean(),
    :anchor => String.t,
    :attack_if_at_war => boolean(),
    :attack_if_other_security_status_dropping => boolean(),
    :attack_security_status_threshold => float() | nil,
    :attack_standing_threshold => float() | nil,
    :fuel_bay_take => String.t,
    :fuel_bay_view => String.t,
    :fuels => [EveESI.Model.GetCorporationsCorporationIdStarbasesStarbaseIdFuel.t] | nil,
    :offline => String.t,
    :online => String.t,
    :unanchor => String.t,
    :use_alliance_standings => boolean()
  }

  alias EveESI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:fuels, :list, EveESI.Model.GetCorporationsCorporationIdStarbasesStarbaseIdFuel)
  end
end

