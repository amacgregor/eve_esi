# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule EveESI.Model.GetCorporationsCorporationIdStructures200Ok do
  @moduledoc """
  200 ok object
  """

  @derive Jason.Encoder
  defstruct [
    :corporation_id,
    :fuel_expires,
    :name,
    :next_reinforce_apply,
    :next_reinforce_hour,
    :profile_id,
    :reinforce_hour,
    :services,
    :state,
    :state_timer_end,
    :state_timer_start,
    :structure_id,
    :system_id,
    :type_id,
    :unanchors_at
  ]

  @type t :: %__MODULE__{
    :corporation_id => integer(),
    :fuel_expires => DateTime.t | nil,
    :name => String.t | nil,
    :next_reinforce_apply => DateTime.t | nil,
    :next_reinforce_hour => integer() | nil,
    :profile_id => integer(),
    :reinforce_hour => integer() | nil,
    :services => [EveESI.Model.GetCorporationsCorporationIdStructuresService.t] | nil,
    :state => String.t,
    :state_timer_end => DateTime.t | nil,
    :state_timer_start => DateTime.t | nil,
    :structure_id => integer(),
    :system_id => integer(),
    :type_id => integer(),
    :unanchors_at => DateTime.t | nil
  }

  alias EveESI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:fuel_expires, :datetime, nil)
     |> Deserializer.deserialize(:next_reinforce_apply, :datetime, nil)
     |> Deserializer.deserialize(:services, :list, EveESI.Model.GetCorporationsCorporationIdStructuresService)
     |> Deserializer.deserialize(:state_timer_end, :datetime, nil)
     |> Deserializer.deserialize(:state_timer_start, :datetime, nil)
     |> Deserializer.deserialize(:unanchors_at, :datetime, nil)
  end
end

